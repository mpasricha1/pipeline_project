from splinter import Browser
from bs4 import BeautifulSoup as bs
import pandas as pd
import requests
import io

class extractor:
	def __init__(self):
		self.data = ""

	def pull_data(self):
		# url = "https://linkwc.spectraenergy.com/Pointdata/AgtAllPoints.csv"
		# url = "https://linkwc.spectraenergy.com/Pointdata/EtAllPoints.csv"
		#url = "https://peplmessenger.energytransfer.com/ipost/locations/index?f=csv&extension=csv&asset=PEPL&gasDay=2"
		url = "https://rtba.spectraenergy.com/InformationalPosting/Default.aspx?bu=ET&Type=OA"
		payload = {
			'ctl00_ScriptManager111_HiddenField': "",
			'__EVENTTARGET': 'ctl00%24MainContent%24ctl01%24oaDefault%24hlDown%24LinkButton1',
			'__EVENTARGUMENT': '', 
			'__LASTFOCUS': '',
			'__VIEWSTATE': '%2FwEPDwUKMjA5MjI2OTE0NQ9kFgJmD2QWAgIDD2QWAgIDD2QWAgIDD2QWAmYPZBYEAgMPFgIeCWlubmVyaHRtbAUfRWFzdCBUZW5uZXNzZWUgTmF0dXJhbCBHYXMsIExMQ2QCBQ9kFgICAQ9kFgYCDA9kFgQCAQ9kFgJmD2QWBgIBD2QWAgIDDw8WBh4MU2VsZWN0ZWREYXRlBgAwQai%2BoNiIHgdNYXhEYXRlBgCAEIhVodgIHgdNaW5EYXRlBgCAUvMXRNUIZBYEZg8UKwAIDxYOHg1PcmlnaW5hbFZhbHVlBRYxMi8xNS8yMDIwIDEyOjAwOjAwIEFNHgRUZXh0BRMyMDIwLTEyLTE1LTAwLTAwLTAwHg1MYWJlbENzc0NsYXNzBQdyaUxhYmVsHhdFbmFibGVBamF4U2tpblJlbmRlcmluZ2geBFNraW4FB0RlZmF1bHQfAwYAgFLzF0TVCB8CBgCAEIhVodgIZBYGHgVXaWR0aBsAAAAAAABZQAcAAAAeCENzc0NsYXNzBRFyaVRleHRCb3ggcmlIb3Zlch4EXyFTQgKCAhYGHwkbAAAAAAAAWUAHAAAAHwoFEXJpVGV4dEJveCByaUVycm9yHwsCggIWBh8JGwAAAAAAAFlABwAAAB8KBRNyaVRleHRCb3ggcmlGb2N1c2VkHwsCggIWBh8JGwAAAAAAAFlABwAAAB8KBRNyaVRleHRCb3ggcmlFbmFibGVkHwsCggIWBh8JGwAAAAAAAFlABwAAAB8KBRRyaVRleHRCb3ggcmlEaXNhYmxlZB8LAoICFgYfCRsAAAAAAABZQAcAAAAfCgURcmlUZXh0Qm94IHJpRW1wdHkfCwKCAhYGHwkbAAAAAAAAWUAHAAAAHwoFEHJpVGV4dEJveCByaVJlYWQfCwKCAmQCAg8UKwANDxYQBQ1TZWxlY3RlZERhdGVzDwWPAVRlbGVyaWsuV2ViLlVJLkNhbGVuZGFyLkNvbGxlY3Rpb25zLkRhdGVUaW1lQ29sbGVjdGlvbiwgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxMC4yLjkyOS40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0FCsAAAUETWluRAYAgFLzF0TVCAUETWF4RAYAgBCIVaHYCAUERm9jRAYAwKZdjKDYCAULU3BlY2lhbERheXMPBZIBVGVsZXJpay5XZWIuVUkuQ2FsZW5kYXIuQ29sbGVjdGlvbnMuQ2FsZW5kYXJEYXlDb2xsZWN0aW9uLCBUZWxlcmlrLldlYi5VSSwgVmVyc2lvbj0yMDEwLjIuOTI5LjQwLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTEyMWZhZTc4MTY1YmEzZDQUKwAABQ9SZW5kZXJJbnZpc2libGVnBQNFUlNoBRFFbmFibGVNdWx0aVNlbGVjdGgPFgQfCAUHRGVmYXVsdB8HaGRkFgQfCgULcmNNYWluVGFibGUfCwICFgQfCgUMcmNPdGhlck1vbnRoHwsCAmQWBB8KBQpyY1NlbGVjdGVkHwsCAmQWBB8KBQpyY0Rpc2FibGVkHwsCAhYEHwoFDHJjT3V0T2ZSYW5nZR8LAgIWBB8KBQlyY1dlZWtlbmQfCwICFgQfCgUHcmNIb3Zlch8LAgIWBB8KBTFSYWRDYWxlbmRhck1vbnRoVmlldyBSYWRDYWxlbmRhck1vbnRoVmlld19EZWZhdWx0HwsCAhYEHwoFCXJjVmlld1NlbB8LAgJkAgMPZBYCAgMPEGQQFSEWVElNRUxZXzIwMjAtMTItMTRfMTQ1MhRMQVRFXzIwMjAtMTItMTRfMTUwMBRMQVRFXzIwMjAtMTItMTRfMTYwMBRMQVRFXzIwMjAtMTItMTRfMTcwMBRMQVRFXzIwMjAtMTItMTRfMTgwMBRMQVRFXzIwMjAtMTItMTRfMTkwMBVMQVRFQ18yMDIwLTEyLTE0XzE5MzUVTEFURUNfMjAyMC0xMi0xNF8yMDAwFExBVEVfMjAyMC0xMi0xNF8yMTAwFExBVEVfMjAyMC0xMi0xNF8yMjAwFExBVEVfMjAyMC0xMi0xNF8yMzAwFExBVEVfMjAyMC0xMi0xNV8wMDA1FExBVEVfMjAyMC0xMi0xNV8wMTAwFExBVEVfMjAyMC0xMi0xNV8wMjAwFExBVEVfMjAyMC0xMi0xNV8wMzAwFExBVEVfMjAyMC0xMi0xNV8wNDAwFExBVEVfMjAyMC0xMi0xNV8wNTAwFExBVEVfMjAyMC0xMi0xNV8wNjAwFExBVEVfMjAyMC0xMi0xNV8wNzAwFExBVEVfMjAyMC0xMi0xNV8wODAwFExBVEVfMjAyMC0xMi0xNV8wOTAwFklOVFJEWV8yMDIwLTEyLTE1XzEwMDAWSU5UUkRZXzIwMjAtMTItMTVfMTEwMBdJTlRSRFlDXzIwMjAtMTItMTVfMTEzNRdJTlRSRFlDXzIwMjAtMTItMTVfMTIwMBZJTlRSRFlfMjAyMC0xMi0xNV8xMzAwFklOVFJEWV8yMDIwLTEyLTE1XzE0MDAWSU5UUkRZXzIwMjAtMTItMTVfMTUwMBdJTlRSRFlDXzIwMjAtMTItMTVfMTYwMBdJTlRSRFlDXzIwMjAtMTItMTVfMTYzNRZJTlRSRFlfMjAyMC0xMi0xNV8xNzAwFklOVFJEWV8yMDIwLTEyLTE1XzE4MDAWSU5UUkRZXzIwMjAtMTItMTVfMTkwMBUhFlRJTUVMWV8yMDIwLTEyLTE0XzE0NTIUTEFURV8yMDIwLTEyLTE0XzE1MDAUTEFURV8yMDIwLTEyLTE0XzE2MDAUTEFURV8yMDIwLTEyLTE0XzE3MDAUTEFURV8yMDIwLTEyLTE0XzE4MDAUTEFURV8yMDIwLTEyLTE0XzE5MDAVTEFURUNfMjAyMC0xMi0xNF8xOTM1FUxBVEVDXzIwMjAtMTItMTRfMjAwMBRMQVRFXzIwMjAtMTItMTRfMjEwMBRMQVRFXzIwMjAtMTItMTRfMjIwMBRMQVRFXzIwMjAtMTItMTRfMjMwMBRMQVRFXzIwMjAtMTItMTVfMDAwNRRMQVRFXzIwMjAtMTItMTVfMDEwMBRMQVRFXzIwMjAtMTItMTVfMDIwMBRMQVRFXzIwMjAtMTItMTVfMDMwMBRMQVRFXzIwMjAtMTItMTVfMDQwMBRMQVRFXzIwMjAtMTItMTVfMDUwMBRMQVRFXzIwMjAtMTItMTVfMDYwMBRMQVRFXzIwMjAtMTItMTVfMDcwMBRMQVRFXzIwMjAtMTItMTVfMDgwMBRMQVRFXzIwMjAtMTItMTVfMDkwMBZJTlRSRFlfMjAyMC0xMi0xNV8xMDAwFklOVFJEWV8yMDIwLTEyLTE1XzExMDAXSU5UUkRZQ18yMDIwLTEyLTE1XzExMzUXSU5UUkRZQ18yMDIwLTEyLTE1XzEyMDAWSU5UUkRZXzIwMjAtMTItMTVfMTMwMBZJTlRSRFlfMjAyMC0xMi0xNV8xNDAwFklOVFJEWV8yMDIwLTEyLTE1XzE1MDAXSU5UUkRZQ18yMDIwLTEyLTE1XzE2MDAXSU5UUkRZQ18yMDIwLTEyLTE1XzE2MzUWSU5UUkRZXzIwMjAtMTItMTVfMTcwMBZJTlRSRFlfMjAyMC0xMi0xNV8xODAwFklOVFJEWV8yMDIwLTEyLTE1XzE5MDAUKwMhZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnFgECFGQCCQ9kFgQCAQ9kFgJmDw8WAh4HRW5hYmxlZGdkZAIDD2QWAmYPDxYCHwxnZGQCAw9kFgJmD2QWBGYPZBYCAgEPZBYCAgcPFgIeB1Zpc2libGVnZAIBD2QWAgIBDxYCHw1nZAIOD2QWAgIBDxYCHwBlZAIQD2QWAgIBD2QWAmYPZBYEAgEPFgIfAAUQQXMgb2YgMTIvMTMvMjAyMGQCAw9kFgxmDxYCHw1nFgICAQ8WAh8AZWQCAQ8WAh8NZxYCZg8WAh8ABQwxLDI2MC4wIE1kdGhkAgIPFgIfDWcWAgIBDxYCHwAFATFkAgMPFgIfDWcWAmYPFgIfAAUKMTU0LjUgTWR0aGQCBA8WAh8NaGQCBQ8WAh8NaGQYAQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFgMFMGN0bDAwJE1haW5Db250ZW50JGN0bDAxJG9hRGVmYXVsdCR1Y0RhdGUkcmRwRGF0ZQU5Y3RsMDAkTWFpbkNvbnRlbnQkY3RsMDEkb2FEZWZhdWx0JHVjRGF0ZSRyZHBEYXRlJGNhbGVuZGFyBTljdGwwMCRNYWluQ29udGVudCRjdGwwMSRvYURlZmF1bHQkdWNEYXRlJHJkcERhdGUkY2FsZW5kYXLGNtzrvRHO%2Bep%2FpnWg33WnjhfOIJ0d9GO4JRvD4Xpn%2FA%3D%3D',
			'__VIEWSTATEGENERATOR': '2EB9BE08',
			'__EVENTVALIDATION': '%2FwEdACwaCrlt7at66%2F7Kgt5wmC8artSO2vW1J9V%2FGKceG59UgMmjVNS%2Bevs92qpzYLMqt%2BCVz%2F9qsnE8ND%2Figae6uQK15lSBMGYQ33uysQo0AhjEfO3eQ2krlL6M%2BYufh24U1UFxlmM0JncdTb2sbxdklBrT0wUyfNXnho7SoWOUFpxc89Upe4VKoAGvD7fzbJQzwML3G7RZRKA%2FpqR93dOvlQ6hY8V41c%2BwouzdUiGPhcfm8LiPZJC413Moozf0aXE1i1b99aO0YW%2BulSe7vX%2FZhFDB%2FXJx4%2BVWzGf%2FBMvNydTmga4nwijx2Y%2BW8Ot6PR77qCZJO9yngyaIhFwfEoG0LGasVVPx7v%2FKqhGfiCFUuVUOXqGdV8phpKT5qkNVBbNbA39snUjQi1ho%2BKssTFeFciV39d1420TffdEllbfsWY0W3%2Fk%2F7xQDXifRdfg3cG8uxNRjwbjdmHzmYRUHdjQlnas%2FMksFsqVPDAX%2FmrBOGrnfWYuH5k0Xluj2COkce9jgCDiVBRfN8JgTEOaC%2BdHaXA3fAvj1Px6%2BbOx2kSxsWw%2B3zEzWl6%2BM70Rbq%2BKX3ZNmNmS%2FU1AmDZdmDMTqMo1jiOCYa8dy5fMG%2FliCPf72tdlcPZ%2B1M0gvkj3rV3I4y2rlBM%2BuU%2B3BGKQkd3SFuN9Ps3eC2tFD0Og0IyocGLRRK9HmoI1dSTV2CYuRQFC99I1wocqxvdHsPRewGuAAOxelmxQYE2dJwQB%2BjIxDg%2BjRaoE3D7fr4pKUlWzeGGlPiffTpBoxR%2FmztIxTroS69ivdp%2BF22Y9erDJ7NLM%2BW%2FJDfqofUWoYn%2Bu6NiSFIuAM41xy%2BZAcFSPgUjdDF2UpF%2FCfnrDv1RaFpy10vMttuXj9WBzyonylreyRIeZPxCMqtOGOfbyD%2Fd%2FVxJVjwxp%2FFa3VS18r5tl5H1F6MdZLQF5VWxOosB2CJ0tY%2FjVYFvv6TgZJdMkOP5V3X1oOrONO9CFKDXCl',
			'ctl00%24MainContent%24hidDateChange': '',
			'ctl00%24MainContent%24ctl01%24hidTableTitle': '', 
			'ctl00%24MainContent%24ctl01%24hidMapName': '',
			'ctl00%24MainContent%24ctl01%24hidFileId': '',
			'ctl00%24MainContent%24ctl01%24hidStorageCap': '',
			'ctl00%24MainContent%24ctl01%24oaDefault%24ucDate%24rdpDate': '2020-12-15',
			'ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_dateInput_text': '12%2F15%2F2020',
			'ctl00%24MainContent%24ctl01%24oaDefault%24ucDate%24rdpDate%24dateInput': '2020-12-15-00-00-00',
			'ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_dateInput_ClientState': '%7B%22enabled%22%3Atrue%2C%22emptyMessage%22%3A%22%22%2C%22minDateStr%22%3A%2212%2F16%2F2017+0%3A0%3A0%22%2C%22maxDateStr%22%3A%2212%2F16%2F2020+0%3A0%3A0%22%7D',
			'ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_calendar_SD': '%5B%5D',
			'ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_calendar_AD': '%5B%5B2017%2C12%2C16%5D%2C%5B2020%2C12%2C16%5D%2C%5B2020%2C12%2C15%5D%5D',
			'ctl00_MainContent_ctl01_oaDefault_ucDate_rdpDate_ClientState': '%7B%22minDateStr%22%3A%2212%2F16%2F2017+0%3A0%3A0%22%2C%22maxDateStr%22%3A%2212%2F16%2F2020+0%3A0%3A0%22%7D',
			'ctl00%24MainContent%24ctl01%24oaDefault%24ucSelector%24ddlSelector': 'LATE_2020-12-15_0900'
		}
		request = requests.post(url, params = payload)
		print(request.content)

		# request = requests.get(url, headers = headers, allow_redirects=True)
		# url_content = request.content

		# df = pd.DataFrame(pd.read_csv(io.StringIO(url_content.decode("utf-8"))))

		# print(df)

		# return df

	def scraper(self): 
		executable_path = {'executable_path': 'chromedriver.exe'}
		browser = Browser('chrome', **executable_path, headless=False)

		url = "https://rtba.spectraenergy.com/InformationalPosting/Default.aspx?bu=ET&Type=OA"

		browser.visit(url)

		html = browser.html
		soup = bs(html,"html.parser")

		browser.links.find_by_text("Downloadable Format")

		browser.quit()